{
  "name": "gulp-css-globbing",
  "version": "0.1.8",
  "description": "A Gulp plugin for globbing CSS @import statements",
  "author": {
    "name": "Johan SahlÃ©n",
    "email": "johan@monospace.se"
  },
  "contributors": [
    {
      "name": "Scott Nath",
      "url": "https://github.com/scottnath"
    },
    {
      "name": "Thomas Creeten",
      "url": "https://github.com/CREEATION"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jsahlen/gulp-css-globbing.git"
  },
  "bugs": {
    "url": "https://github.com/jsahlen/gulp-css-globbing/issues"
  },
  "license": {
    "type": "MIT",
    "url": "http://github.com/jsahlen/gulp-css-globbing/raw/master/LICENSE"
  },
  "main": "index.js",
  "dependencies": {
    "glob": "^4.0.5",
    "gulp-util": "^3.0.0",
    "vinyl-map": "^1.0.1"
  },
  "devDependencies": {
    "event-stream": "^3.1.7",
    "mocha": "^1.21.3",
    "should": "^4.0.4",
    "vinyl": "^0.3.2"
  },
  "scripts": {
    "test": "mocha"
  },
  "keywords": [
    "gulpplugin",
    "css",
    "glob"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "readme": "# gulp-css-globbing [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n> A Gulp plugin for globbing CSS `@import` statements\n\nExpands CSS `@import` statements containing globs with the full paths. Useful with pre-processors like Sass.\n\nHeavily inspired by [`sass-globbing`](https://github.com/chriseppstein/sass-globbing)\n\n## Install\n\nInstall `gulp-css-globbing` as a development dependency using npm:\n\n```shell\nnpm install --save-dev gulp-css-globbing\n```\n\n## Usage\n\n```javascript\nvar cssGlobbing = require('gulp-css-globbing');\n\ngulp.task('css', function(){\n  gulp.src(['src/styles.css'])\n    .pipe(cssGlobbing())\n    .pipe(gulp.dest('build/styles.css'));\n});\n```\n\nGiven a CSS file that looks like this:\n\n```css\n@import url('components/*.css');\n\nbody {\n  background: white;\n}\n```\n\nThe plugin would produce the following:\n\n```css\n@import url('components/flex-embed.css');\n@import url('components/media.css');\n\nbody {\n  background: white;\n}\n```\n\nGlobbing is relative to the source file's path.\n\n\n## Options\n\n`gulp-css-globbing` can be called with an options object:\n\n```javascript\ngulp.task('css', function(){\n  gulp.src(['src/styles.css'])\n    .pipe(cssGlobbing({\n      extensions: ['.css', '.scss'],\n      ignoreFolders: ['../styles'],\n      autoReplaceBlock: {\n        onOff: false,\n        globBlockBegin: 'cssGlobbingBegin',\n        globBlockEnd: 'cssGlobbingEnd',\n        globBlockContents: '../**/*.scss'\n      },\n      scssImportPath: {\n        leading_underscore: false,\n        filename_extension: false\n      }\n    }))\n    .pipe(gulp.dest('build/styles.css'));\n});\n```\n\n### extensions\nType: `String` or `Array`\n\nThe file extensions to treat as valid imported files. If files are found that match the glob, but its extensions don't match this option, they will not be added to the resulting file.\n\nDefault: `['.css']`\n\n### ignoreFolders\nType: `String` or `Array`\n\nFolders gulp-css-globbing should ignore. Each folder should be relative to the source file.\n\nDefault: `['']`\n\n### autoReplaceBlock\nType: `String` or `Object`\n\nSearch for a block of text which is replaced with the path to the files we want to glob. Path can be re-replaced each time we call gulp-css-globbing.\n\nDefault: \n```\n{\n  onOff: false,\n  globBlockBegin: 'cssGlobbingBegin',\n  globBlockEnd: 'cssGlobbingEnd',\n  globBlockContents: '../**/*.scss'\n}\n```\n\nWith the above settings, inside of your main .scss file you would only need to have this:\n```\n// cssGlobbingBegin\n// this line can be blank\n// cssGlobbingEnd\n```\n\n### scssImportPath\nType: `Object`\n\nAllows for [default scss rules for writing scss import paths](https://github.com/causes/scss-lint/blob/master/lib/scss_lint/linter/README.md#importpath).\n\nDefault:\n```\n{\n  leading_underscore: true, // underscores will NOT be removed\n  filename_extension: true // extensions will NOT be removed\n}\n```\n\n#### Leading Underscore\n\nIf `leading_underscore` is set to `false`, then the *first* leading underscore of a file name will be removed. Example: `.../main/_main.scss` becomes `@import '../main/main.scss';`\n\n#### Filename Extension\n\nIf `filename_extension` is set to `false`, then the the extension of a file name will be removed. Example: `.../main/_main.scss` becomes `@import '../main/_main';`\n\n\n\n[travis-url]: https://travis-ci.org/jsahlen/gulp-css-globbing\n[travis-image]: https://travis-ci.org/jsahlen/gulp-css-globbing.svg?branch=master\n[depstat-url]: https://david-dm.org/jsahlen/gulp-css-globbing\n[depstat-image]: https://david-dm.org/jsahlen/gulp-css-globbing.svg\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/jsahlen/gulp-css-globbing#readme",
  "_id": "gulp-css-globbing@0.1.8",
  "_shasum": "f88d75b03a129e4d02f32e8ad74bd353fa640765",
  "_resolved": "https://registry.npmjs.org/gulp-css-globbing/-/gulp-css-globbing-0.1.8.tgz",
  "_from": "gulp-css-globbing@>=0.1.8"
}
